name: Commit Stage

on:
  push:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    env:
      MONGO_DB_URI: ${{ secrets.MONGO_DB_URI }}
      OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
      NODE_ENV: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm run install:backend

      - name: Build Backend
        run: |
          npm run build:backend

      - name: Run Unit Tests
        run: |
          npm run test:backend:unit

      - name: Run Narrow Integration Tests
        run: |
          npm run test:backend:integration

      - name: Run Component Tests
        run: |
          npm run test:backend:component

      - name: Run Contract Provider Verification Tests
        run: |
          npm run test:backend:contract

      - name: Run linter
        run: |
          npm run lint:backend

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build and push Docker image
        working-directory: ./backend
        env:
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

  frontend:
    runs-on: ubuntu-latest
    env:
      VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm run install:frontend

      - name: Build Frontend
        run: |
          npm run build:frontend

      - name: Run Unit Tests
        run: |
          npm run test:frontend:unit

      - name: Run Narrow Integration Tests
        run: |
          npm run test:frontend:integration

      - name: Run Component Tests
        run: |
          npm run test:frontend:component

      - name: Run Contract Provider Verification Tests
        run: |
          npm run test:frontend:contract

  acceptance-test:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    env:
      MONGO_DB_URI: ${{ secrets.MONGO_DB_URI }}
      OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
      NODE_ENV: test
    steps:
      - name: Install docker compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      - name: Install testing dependencies
        working-directory: ./system-test
        run:
          npm install

      - name: Install docker compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Run docker-compose
        working-directory: ./system-test
        env:
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: | 
          docker-compose up -d

      - name: Run acceptance tests
        working-directory: ./system-test
        run: |
          npm run test:acceptance

      - name: Stop docker-compose
        working-directory: ./system-test
        run: | 
          docker-compose down

  